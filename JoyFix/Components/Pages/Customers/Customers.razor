@page "/customers"
@inject JoyFix.Services.CustomerService CustomerService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<h3>Customers</h3>

<button class="btn btn-primary mb-3" @onclick="CreateNew">Add new Customer</button>

<div class="card p-3 mb-4">
    <div class="row g-2">
        <div class="col-md-3">
            <input class="form-control" placeholder="Name" @bind="filterName" />
        </div>
        <div class="col-md-3">
            <input class="form-control" placeholder="Email" @bind="filterEmail" />
        </div>
        <div class="col-md-3">
            <input class="form-control" placeholder="Phone number" @bind="filterPhone" />
        </div>
        <div class="col-md-3">
            <input class="form-control" placeholder="Address" @bind="filterAddress" />
        </div>
    </div>
    <div class="mt-3">
        <button class="btn btn-primary me-2" @onclick="ApplyFilters">Search</button>
        <button class="btn btn-secondary" @onclick="ClearFilters">Clear all</button>
    </div>
</div>

@if (customers == null)
{
    <p><em>Loading...</em></p>
}
else if (!filteredCustomers.Any())
{
    <p>No customers meet the selected criteria.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Email</th>
                <th>Phone number</th>
                <th>Address</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var c in filteredCustomers)
            {
                <tr>
                    <td>@c.Name</td>
                    <td>@c.Email</td>
                    <td>@c.PhoneNumber</td>
                    <td>@c.Address</td>
                    <td>
                        <button class="btn btn-sm btn-secondary me-1" @onclick="() => EditCustomer(c.Id)">Edit</button>
                        <button class="btn btn-sm btn-danger" @onclick="() => ConfirmDelete(c.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@if (confirmDeleteId != null)
{
    <div class="alert alert-warning mt-3">
        <p>Are you sure you want to delete this customer?</p>
        <button class="btn btn-danger me-2" @onclick="DeleteCustomerConfirmed">Yes, delete</button>
        <button class="btn btn-secondary" @onclick="() => confirmDeleteId = null">Cancel</button>
    </div>
}

@code {
    private List<JoyFix.Data.Customer>? customers;
    private List<JoyFix.Data.Customer> filteredCustomers = new();

    private int? confirmDeleteId = null;

    // Filtry
    private string? filterName;
    private string? filterEmail;
    private string? filterPhone;
    private string? filterAddress;

    protected override void OnInitialized()
    {
        LoadCustomers();
    }

    private void LoadCustomers()
    {
        customers = CustomerService.GetAllCustomers();
        filteredCustomers = new List<JoyFix.Data.Customer>(customers);
    }

    private void ApplyFilters()
    {
        if (customers == null) return;

        filteredCustomers = customers
            .Where(c =>
                (string.IsNullOrWhiteSpace(filterName) || c.Name.Contains(filterName, StringComparison.OrdinalIgnoreCase)) &&
                (string.IsNullOrWhiteSpace(filterEmail) || c.Email.Contains(filterEmail, StringComparison.OrdinalIgnoreCase)) &&
                (string.IsNullOrWhiteSpace(filterPhone) || c.PhoneNumber.Contains(filterPhone, StringComparison.OrdinalIgnoreCase)) &&
                (string.IsNullOrWhiteSpace(filterAddress) || c.Address.Contains(filterAddress, StringComparison.OrdinalIgnoreCase))
            )
            .ToList();
    }

    private void ClearFilters()
    {
        filterName = null;
        filterEmail = null;
        filterPhone = null;
        filterAddress = null;

        if (customers != null)
            filteredCustomers = new List<JoyFix.Data.Customer>(customers);
    }

    private void EditCustomer(int id)
    {
        Navigation.NavigateTo($"/customeredit/{id}");
    }

    private void CreateNew()
    {
        Navigation.NavigateTo("/customeradd");
    }

    private void ConfirmDelete(int id)
    {
        confirmDeleteId = id;
    }

    private void DeleteCustomerConfirmed()
    {
        if (confirmDeleteId != null)
        {
            CustomerService.DeleteCustomer(confirmDeleteId.Value);
            confirmDeleteId = null;
            LoadCustomers();
        }
    }
}
